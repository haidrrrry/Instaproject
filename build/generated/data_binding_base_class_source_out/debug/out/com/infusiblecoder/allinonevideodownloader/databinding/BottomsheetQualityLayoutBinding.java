// Generated by view binder compiler. Do not edit!
package com.infusiblecoder.allinonevideodownloader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.infusiblecoder.allinonevideodownloader.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomsheetQualityLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout bottomSheet;

  @NonNull
  public final TextView bottomsheetDuration;

  @NonNull
  public final ImageView bottomsheetThumbnail;

  @NonNull
  public final TextView bottomsheetTitle;

  @NonNull
  public final Button btncancelBottomsheet;

  @NonNull
  public final Button btnopenBottomsheet;

  @NonNull
  public final LinearLayout linbbb;

  @NonNull
  public final LinearLayout linbbb2;

  @NonNull
  public final LinearLayout linbbb3;

  @NonNull
  public final LinearLayout linttt;

  @NonNull
  public final RecyclerView recqualitybottomsheet;

  @NonNull
  public final RecyclerView recqualitybottomsheetAud;

  @NonNull
  public final TextView sourceBottomsheet;

  private BottomsheetQualityLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout bottomSheet, @NonNull TextView bottomsheetDuration,
      @NonNull ImageView bottomsheetThumbnail, @NonNull TextView bottomsheetTitle,
      @NonNull Button btncancelBottomsheet, @NonNull Button btnopenBottomsheet,
      @NonNull LinearLayout linbbb, @NonNull LinearLayout linbbb2, @NonNull LinearLayout linbbb3,
      @NonNull LinearLayout linttt, @NonNull RecyclerView recqualitybottomsheet,
      @NonNull RecyclerView recqualitybottomsheetAud, @NonNull TextView sourceBottomsheet) {
    this.rootView = rootView;
    this.bottomSheet = bottomSheet;
    this.bottomsheetDuration = bottomsheetDuration;
    this.bottomsheetThumbnail = bottomsheetThumbnail;
    this.bottomsheetTitle = bottomsheetTitle;
    this.btncancelBottomsheet = btncancelBottomsheet;
    this.btnopenBottomsheet = btnopenBottomsheet;
    this.linbbb = linbbb;
    this.linbbb2 = linbbb2;
    this.linbbb3 = linbbb3;
    this.linttt = linttt;
    this.recqualitybottomsheet = recqualitybottomsheet;
    this.recqualitybottomsheetAud = recqualitybottomsheetAud;
    this.sourceBottomsheet = sourceBottomsheet;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomsheetQualityLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomsheetQualityLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottomsheet_quality_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomsheetQualityLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout bottomSheet = (RelativeLayout) rootView;

      id = R.id.bottomsheet_duration;
      TextView bottomsheetDuration = ViewBindings.findChildViewById(rootView, id);
      if (bottomsheetDuration == null) {
        break missingId;
      }

      id = R.id.bottomsheet_thumbnail;
      ImageView bottomsheetThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (bottomsheetThumbnail == null) {
        break missingId;
      }

      id = R.id.bottomsheet_title;
      TextView bottomsheetTitle = ViewBindings.findChildViewById(rootView, id);
      if (bottomsheetTitle == null) {
        break missingId;
      }

      id = R.id.btncancel_bottomsheet;
      Button btncancelBottomsheet = ViewBindings.findChildViewById(rootView, id);
      if (btncancelBottomsheet == null) {
        break missingId;
      }

      id = R.id.btnopen_bottomsheet;
      Button btnopenBottomsheet = ViewBindings.findChildViewById(rootView, id);
      if (btnopenBottomsheet == null) {
        break missingId;
      }

      id = R.id.linbbb;
      LinearLayout linbbb = ViewBindings.findChildViewById(rootView, id);
      if (linbbb == null) {
        break missingId;
      }

      id = R.id.linbbb2;
      LinearLayout linbbb2 = ViewBindings.findChildViewById(rootView, id);
      if (linbbb2 == null) {
        break missingId;
      }

      id = R.id.linbbb3;
      LinearLayout linbbb3 = ViewBindings.findChildViewById(rootView, id);
      if (linbbb3 == null) {
        break missingId;
      }

      id = R.id.linttt;
      LinearLayout linttt = ViewBindings.findChildViewById(rootView, id);
      if (linttt == null) {
        break missingId;
      }

      id = R.id.recqualitybottomsheet;
      RecyclerView recqualitybottomsheet = ViewBindings.findChildViewById(rootView, id);
      if (recqualitybottomsheet == null) {
        break missingId;
      }

      id = R.id.recqualitybottomsheet_aud;
      RecyclerView recqualitybottomsheetAud = ViewBindings.findChildViewById(rootView, id);
      if (recqualitybottomsheetAud == null) {
        break missingId;
      }

      id = R.id.source_bottomsheet;
      TextView sourceBottomsheet = ViewBindings.findChildViewById(rootView, id);
      if (sourceBottomsheet == null) {
        break missingId;
      }

      return new BottomsheetQualityLayoutBinding((RelativeLayout) rootView, bottomSheet,
          bottomsheetDuration, bottomsheetThumbnail, bottomsheetTitle, btncancelBottomsheet,
          btnopenBottomsheet, linbbb, linbbb2, linbbb3, linttt, recqualitybottomsheet,
          recqualitybottomsheetAud, sourceBottomsheet);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
