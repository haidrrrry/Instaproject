<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.infusiblecoder.allinonevideodownloader"
    android:versionCode="113"
    android:versionName="9.3" >

    <uses-sdk
        android:minSdkVersion="23"
        android:targetSdkVersion="33" />

    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    <uses-permission android:name="com.google.android.gms.permission.AD_ID" />
    <uses-permission android:name="com.android.vending.BILLING" />
    <uses-permission android:name="android.permission.BROADCAST_CLOSE_SYSTEM_DIALOGS" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <!-- Required only if your app targets Android 13. -->
    <!--
    Declare one or more the following permissions only if your app needs
    to access data that's protected by them.
    -->
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />
    <uses-permission android:name="android.permission.READ_MEDIA_AUDIO" />
    <uses-permission android:name="android.permission.READ_MEDIA_VIDEO" />

    <!-- Required to maintain app compatibility. -->
    <uses-permission
        android:name="android.permission.READ_EXTERNAL_STORAGE"
        android:maxSdkVersion="32" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <uses-permission android:name="android.permission.ACCESS_MEDIA_LOCATION" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.USE_BIOMETRIC" />
    <uses-permission android:name="android.permission.SET_WALLPAPER" />
    <uses-permission android:name="com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE" />
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    <uses-permission android:name="android.permission.EXPAND_STATUS_BAR" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

    <queries>
        <intent>
            <action android:name="android.intent.action.MAIN" />
        </intent>

        <package android:name="com.whatsapp" />
        <package android:name="com.whatsapp.w4b" />
        <package android:name="com.facebook.katana" />
        <package android:name="com.zhiliaoapp.musically" />
        <package android:name="com.instagram.android" />
        <package android:name="com.twitter.android" />
        <package android:name="com.google.android.youtube" />
        <package android:name="com.roposo.android" />
        <package android:name="in.mohalla.sharechat" />
        <package android:name="video.like" />

        <intent>
            <action android:name="android.intent.action.VIEW" />

            <category android:name="android.intent.category.BROWSABLE" />

            <data android:scheme="https" />
        </intent>
        <!-- Sending Emails -->
        <intent>
            <action android:name="android.intent.action.SENDTO" />

            <data android:scheme="mailto" />
        </intent> <!-- End of browser content -->
        <!-- For CustomTabsService -->
        <intent>
            <action android:name="android.support.customtabs.action.CustomTabsService" />
        </intent>
    </queries>
    <queries>
        <intent>
            <action android:name="android.intent.action.VIEW" />

            <data android:scheme="*" />
        </intent>
    </queries>

    <!-- suppress DeprecatedClassUsageInspection -->
    <uses-permission android:name="android.permission.USE_FINGERPRINT" /> <!-- Create a unique permission for your app and use it so only your app can receive your OneSignal messages. -->
    <permission
        android:name="com.infusiblecoder.allinonevideodownloader.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.infusiblecoder.allinonevideodownloader.permission.C2D_MESSAGE" /> <!-- Required, makes sure notifications are delivered on time. -->
    <uses-permission android:name="android.permission.WAKE_LOCK" /> <!-- START: ShortcutBadger -->
    <!-- Samsung -->
    <uses-permission android:name="com.sec.android.provider.badge.permission.READ" />
    <uses-permission android:name="com.sec.android.provider.badge.permission.WRITE" /> <!-- HTC -->
    <uses-permission android:name="com.htc.launcher.permission.READ_SETTINGS" />
    <uses-permission android:name="com.htc.launcher.permission.UPDATE_SHORTCUT" /> <!-- Sony -->
    <uses-permission android:name="com.sonyericsson.home.permission.BROADCAST_BADGE" />
    <uses-permission android:name="com.sonymobile.home.permission.PROVIDER_INSERT_BADGE" /> <!-- Apex -->
    <uses-permission android:name="com.anddoes.launcher.permission.UPDATE_COUNT" /> <!-- Solid -->
    <uses-permission android:name="com.majeur.launcher.permission.UPDATE_BADGE" /> <!-- Huawei -->
    <uses-permission android:name="com.huawei.android.launcher.permission.CHANGE_BADGE" />
    <uses-permission android:name="com.huawei.android.launcher.permission.READ_SETTINGS" />
    <uses-permission android:name="com.huawei.android.launcher.permission.WRITE_SETTINGS" /> <!-- ZUK -->
    <uses-permission android:name="android.permission.READ_APP_BADGE" /> <!-- OPPO -->
    <uses-permission android:name="com.oppo.launcher.permission.READ_SETTINGS" />
    <uses-permission android:name="com.oppo.launcher.permission.WRITE_SETTINGS" /> <!-- EvMe -->
    <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_READ" />
    <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_WRITE" />
    <uses-permission android:name="com.android.vending.CHECK_LICENSE" />

    <application
        android:name="com.infusiblecoder.allinonevideodownloader.Appcontroller"
        android:allowBackup="true"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:debuggable="true"
        android:extractNativeLibs="false"
        android:hardwareAccelerated="true"
        android:icon="@drawable/ic_appicon"
        android:installLocation="preferExternal"
        android:label="@string/app_name"
        android:largeHeap="true"
        android:networkSecurityConfig="@xml/network_security_config"
        android:preserveLegacyExternalStorage="true"
        android:requestLegacyExternalStorage="true"
        android:roundIcon="@drawable/ic_appicon"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        android:usesCleartextTraffic="true" >
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.snapchatstorysaver.SnapChatBulkStoryDownloader"
            android:exported="false"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity" >
        </activity>

        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />

        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.facebookstorysaver.FacebookPrivateWebview"
            android:exported="true"
            android:theme="@style/Theme.AppCompat.Light.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.GetLinkThroughWebview"
            android:exported="true" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.BulkDownloaderProfileActivity"
            android:exported="false"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.InstagramBulkDownloaderSearch" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.InstagramBulkDownloaderSearch"
            android:exported="false"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.SplashScreen"
            android:exported="true"
            android:theme="@style/AppTheme.NoActionBar" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.AllSupportedApps"
            android:exported="false"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.extraFeatures.TikTokWebview"
            android:exported="true"
            android:theme="@style/Theme.AppCompat.Light.NoActionBar" />
        <activity
            android:name="com.facebook.ads.AudienceNetworkActivity"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <provider
            android:name="com.infusiblecoder.allinonevideodownloader.utils.MyFileProvider"
            android:authorities="com.infusiblecoder.allinonevideodownloader.provider"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_provider_paths" />
        </provider>
        <provider
            android:name="br.com.mauker.materialsearchview.db.HistoryProvider"
            android:authorities="com.infusiblecoder.allinonevideodownloader.br.com.mauker.materialsearchview.searchhistorydatabase"
            android:exported="true"
            android:protectionLevel="signature"
            android:syncable="true" />

        <meta-data
            android:name="com.google.android.gms.ads.APPLICATION_ID"
            android:value="@string/AdmobAppId" />

        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.MainActivity"
            android:exported="true"
            android:hardwareAccelerated="true"
            android:launchMode="singleTask"
            android:windowSoftInputMode="adjustPan" >
            <intent-filter>
                <action android:name="android.intent.action.SEND" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="text/plain" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.extraFeatures.videolivewallpaper.MainActivityLivewallpaper"
            android:exported="true"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.RateUsWebView"
            android:exported="true" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.FullImageActivity"
            android:exported="false"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.InstagramLoginActivity"
            android:exported="false"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.TikTokDownloadWebview"
            android:exported="true"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.extraFeatures.EarningAppWebviewActivity"
            android:exported="true"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.facebookstorysaver.fbutils.LoginWithFB"
            android:exported="false" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.GetTiktokLinkThroughWebview"
            android:exported="true" />

        <service
            android:name="com.infusiblecoder.allinonevideodownloader.extraFeatures.videolivewallpaper.CinimaWallService"
            android:exported="true"
            android:label="@string/app_name"
            android:permission="android.permission.BIND_WALLPAPER" >
            <intent-filter>
                <action android:name="android.service.wallpaper.WallpaperService" />
            </intent-filter>

            <meta-data
                android:name="android.service.wallpaper"
                android:resource="@xml/config" />
        </service>
        <service
            android:name="com.infusiblecoder.allinonevideodownloader.services.MyFirebaseMessagingService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service
            android:name="com.infusiblecoder.allinonevideodownloader.services.ClipboardMonitor"
            android:exported="false"
            android:label="Clipboard Monitor"
            android:stopWithTask="false" />
        <service
            android:name="com.infusiblecoder.allinonevideodownloader.services.FloatingWidgetDownload"
            android:enabled="true"
            android:exported="false" />

        <receiver
            android:name="com.infusiblecoder.allinonevideodownloader.receiver.Receiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="quit_action" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.infusiblecoder.allinonevideodownloader.services.Restarter"
            android:exported="true" >
            <intent-filter>
                <action android:name="restartservice" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.infusiblecoder.allinonevideodownloader.utils.DownloadBroadcastReceiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.DOWNLOAD_COMPLETE" />
            </intent-filter>
        </receiver>

        <!-- TODO DONE to allow PIP with out dialog permission -->
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.VideoPlayActivity"
            android:configChanges="screenSize|smallestScreenSize|screenLayout|orientation"
            android:exported="true"
            android:launchMode="singleInstance"
            android:resizeableActivity="true"
            android:supportsPictureInPicture="true"
            android:theme="@style/Theme.AppCompat.Light.NoActionBar"
            android:windowSoftInputMode="adjustNothing" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.tiktok_methods.TikTokDownloadCloudBypassWebview"
            android:exported="true"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.tiktok_methods.TikTokDownloadCloudBypassWebview_method_2"
            android:exported="true"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.tiktok_methods.TikTokDownloadCloudBypassWebview_method_3"
            android:exported="true"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.tiktok_methods.TikTokDownloadCloudBypassWebview_method_4"
            android:exported="true"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.tiktok_methods.TikTokDownloadCloudBypassWebview_method_5"
            android:exported="true"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.tiktok_methods.TikTokDownloadCloudBypassWebview_method_6"
            android:exported="true"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.tiktok_methods.TikTokDownloadCloudBypassWebview_method_7"
            android:exported="true"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.GalleryActivity"
            android:exported="false"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.tiktok_methods.FacebookDownloadCloudBypassWebview_method_2"
            android:exported="true"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.tiktok_methods.FacebookDownloadCloudBypassWebview_method_1"
            android:exported="true"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.infusiblecoder.allinonevideodownloader.activities.SubscriptionActivity"
            android:exported="true"
            android:parentActivityName="com.infusiblecoder.allinonevideodownloader.activities.MainActivity"
            android:theme="@style/AppTheme.NoActionBar" />

        <!-- Google Play Services -->
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
        <meta-data
            android:name="firebase_crashlytics_collection_enabled"
            android:value="false" />
        <meta-data
            android:name="com.bumptech.glide.integration.okhttp3.OkHttpGlideModule"
            android:value="GlideModule" />

        <provider
            android:name="com.google.firebase.perf.provider.FirebasePerfProvider"
            android:authorities="com.infusiblecoder.allinonevideodownloader.firebaseperfprovider"
            android:exported="false"
            android:initOrder="101" />

        <service
            android:name="com.google.firebase.components.ComponentDiscoveryService"
            android:directBootAware="true"
            android:exported="false" >
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.perf.FirebasePerfRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.messaging.FirebaseMessagingRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.remoteconfig.RemoteConfigRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.crashlytics.CrashlyticsRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.installations.FirebaseInstallationsRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.datatransport.TransportRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.abt.component.AbtRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
        </service>

        <receiver
            android:name="com.onesignal.FCMBroadcastReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >

            <!-- High priority so OneSignal payloads can be filtered from other FCM receivers -->
            <intent-filter android:priority="999" >
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <category android:name="com.infusiblecoder.allinonevideodownloader" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.onesignal.HmsMessageServiceOneSignal"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <activity
            android:name="com.onesignal.NotificationOpenedActivityHMS"
            android:exported="true"
            android:noHistory="true"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" >
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
            </intent-filter>
        </activity>

        <service
            android:name="com.onesignal.FCMIntentService"
            android:exported="false" />
        <service
            android:name="com.onesignal.FCMIntentJobService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="com.onesignal.SyncService"
            android:exported="false"
            android:stopWithTask="true" />
        <service
            android:name="com.onesignal.SyncJobService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <activity
            android:name="com.onesignal.PermissionsActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <receiver
            android:name="com.onesignal.NotificationDismissReceiver"
            android:exported="true" />
        <receiver
            android:name="com.onesignal.BootUpReceiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.QUICKBOOT_POWERON" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.onesignal.UpgradeReceiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.MY_PACKAGE_REPLACED" />
            </intent-filter>
        </receiver>

        <activity
            android:name="com.onesignal.NotificationOpenedReceiver"
            android:excludeFromRecents="true"
            android:exported="true"
            android:noHistory="true"
            android:taskAffinity=""
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <activity
            android:name="com.onesignal.NotificationOpenedReceiverAndroid22AndOlder"
            android:excludeFromRecents="true"
            android:exported="true"
            android:noHistory="true"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <activity
            android:name="com.github.javiersantos.piracychecker.activities.LicenseActivity"
            android:theme="@style/PiracyCheckerStyle" /> <!-- Include the AdActivity and InAppPurchaseActivity configChanges and themes. -->
        <activity
            android:name="com.google.android.gms.ads.AdActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent" />

        <provider
            android:name="com.google.android.gms.ads.MobileAdsInitProvider"
            android:authorities="com.infusiblecoder.allinonevideodownloader.mobileadsinitprovider"
            android:exported="false"
            android:initOrder="100" />

        <service
            android:name="com.google.android.gms.ads.AdService"
            android:enabled="true"
            android:exported="false" />

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </receiver>
        <!--
             FirebaseMessagingService performs security checks at runtime,
             but set to not exported to explicitly avoid allowing another app to call it.
        -->
        <service
            android:name="com.google.firebase.messaging.FirebaseMessagingService"
            android:directBootAware="true"
            android:exported="false" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <provider
            android:name="com.facebook.ads.AudienceNetworkContentProvider"
            android:authorities="com.infusiblecoder.allinonevideodownloader.AudienceNetworkContentProvider"
            android:exported="false" />

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
            android:enabled="true"
            android:exported="false" >
        </receiver>

        <service
            android:name="com.google.android.gms.measurement.AppMeasurementService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.google.android.gms.measurement.AppMeasurementJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.infusiblecoder.allinonevideodownloader.firebaseinitprovider"
            android:directBootAware="true"
            android:exported="false"
            android:initOrder="100" />
        <provider
            android:name="androidx.startup.InitializationProvider"
            android:authorities="com.infusiblecoder.allinonevideodownloader.androidx-startup"
            android:exported="false" >
            <meta-data
                android:name="androidx.work.WorkManagerInitializer"
                android:value="androidx.startup" />
            <meta-data
                android:name="androidx.emoji2.text.EmojiCompatInitializer"
                android:value="androidx.startup" />
            <meta-data
                android:name="androidx.lifecycle.ProcessLifecycleInitializer"
                android:value="androidx.startup" />
        </provider>

        <service
            android:name="androidx.work.impl.background.systemalarm.SystemAlarmService"
            android:directBootAware="false"
            android:enabled="@bool/enable_system_alarm_service_default"
            android:exported="false" />
        <service
            android:name="androidx.work.impl.background.systemjob.SystemJobService"
            android:directBootAware="false"
            android:enabled="@bool/enable_system_job_service_default"
            android:exported="true"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="androidx.work.impl.foreground.SystemForegroundService"
            android:directBootAware="false"
            android:enabled="@bool/enable_system_foreground_service_default"
            android:exported="false" />

        <receiver
            android:name="androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver"
            android:directBootAware="false"
            android:enabled="true"
            android:exported="false" />
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.BATTERY_OKAY" />
                <action android:name="android.intent.action.BATTERY_LOW" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.DEVICE_STORAGE_LOW" />
                <action android:name="android.intent.action.DEVICE_STORAGE_OK" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.RescheduleReceiver"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.TIME_SET" />
                <action android:name="android.intent.action.TIMEZONE_CHANGED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver"
            android:directBootAware="false"
            android:enabled="@bool/enable_system_alarm_service_default"
            android:exported="false" >
            <intent-filter>
                <action android:name="androidx.work.impl.background.systemalarm.UpdateProxies" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.diagnostics.DiagnosticsReceiver"
            android:directBootAware="false"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.DUMP" >
            <intent-filter>
                <action android:name="androidx.work.diagnostics.REQUEST_DIAGNOSTICS" />
            </intent-filter>
        </receiver>

        <service
            android:name="androidx.room.MultiInstanceInvalidationService"
            android:directBootAware="true"
            android:exported="false" />
        <service
            android:name="com.google.android.datatransport.runtime.backends.TransportBackendDiscovery"
            android:exported="false" >
            <meta-data
                android:name="backend:com.google.android.datatransport.cct.CctBackendFactory"
                android:value="cct" />
        </service>
        <service
            android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" >
        </service>

        <receiver
            android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver"
            android:exported="false" /> <!-- The activities will be merged into the manifest of the hosting app. -->
        <activity
            android:name="com.google.android.play.core.missingsplits.PlayCoreMissingSplitsActivity"
            android:enabled="false"
            android:exported="false"
            android:launchMode="singleInstance"
            android:process=":playcore_missing_splits_activity"
            android:stateNotNeeded="true" />
        <activity
            android:name="com.google.android.play.core.common.PlayCoreDialogWrapperActivity"
            android:exported="false"
            android:stateNotNeeded="true"
            android:theme="@style/Theme.PlayCore.Transparent" /> <!-- The services will be merged into the manifest of the hosting app. -->
        <service
            android:name="com.google.android.play.core.assetpacks.AssetPackExtractionService"
            android:enabled="false"
            android:exported="true" >
            <meta-data
                android:name="com.google.android.play.core.assetpacks.versionCode"
                android:value="11003" />
        </service>
        <service
            android:name="com.google.android.play.core.assetpacks.ExtractionForegroundService"
            android:enabled="false"
            android:exported="false" />

        <meta-data
            android:name="com.google.android.play.billingclient.version"
            android:value="5.0.0" />

        <activity
            android:name="com.android.billingclient.api.ProxyBillingActivity"
            android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
    </application>

</manifest>